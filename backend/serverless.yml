service: cs-group-${self:custom.stageVars.groupNumber}-${self:custom.stageVars.myFirstname}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:batchWriteItem
      Resource:
        - 'Fn::GetAtt': [Table, Arn]
  environment:
    tableName: ${self:service.name}-dynamodb

functions:
  hello:
    handler: functions/hello.handle
    events:
      - http:
          path: hello
          method: get

  getMovie:
    handler: functions/Movies/getMovie.handle
    events:
      - http:
          method: get
          path: movies/{id}
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  createMovie:
    handler: functions/Movies/createMovie.handle
    events:
      - http:
          method: post
          path: movies
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  searchMovies:
    handler: functions/Search/searchMovies.handle
    events:
      - http:
          method: get
          path: movies/search
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  listMovies:
    handler: functions/Movies/listMovies.handle
    events:
      - http:
          method: get
          path: movies
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  getUser:
    handler: functions/Users/getUser.handle
    events:
      - http:
          method: get
          path: users/{id}
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  createUser:
    handler: functions/Users/createUser.handle
    events:
      - http:
          method: post
          path: users
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  listUsers:
    handler: functions/Users/listUsers.handle
    events:
      - http:
          method: get
          path: users
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  populate:
    handler: functions/populate.handle
    events:
      - http:
          method: post
          path: populate
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  getRating:
    handler: functions/Ratings/getRating.handle
    events:
      - http:
          method: get
          path: ratings/{id}
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  createRating:
    handler: functions/Ratings/createRating.handle
    events:
      - http:
          method: post
          path: ratings
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  getRatings:
    handler: functions/Ratings/getRatings.handle
    events:
      - http:
          method: get
          path: ratings
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  getRecomOnCriterias:
    handler: functions/Movies/getRecomOnCriterias.handle
    events:
      - http:
          method: get
          path: getRecomOnCrit
          cors:
            origin: http://localhost:3000
            allowCredentials: true

custom:
  stageVars: ${file(./stage.${self:provider.stage}.yml)}

resources:
  - ${file(resources/dynamodb.yml)}
